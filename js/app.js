// Generated by CoffeeScript 1.10.0
(function() {
  angular.module('starter', ['ionic', 'ngCordova']).run(function($ionicPlatform) {
    return $ionicPlatform.ready(function() {
      if (window.cordova && window.cordova.plugins.Keyboard) {
        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
      }
      if (window.StatusBar) {
        return StatusBar.styleDefault();
      }
    });
  }).controller('testController', function($log, $scope, $cordovaBarcodeScanner, $cordovaBatteryStatus, $cordovaDeviceOrientation, $ionicPlatform) {
    var io, ref, ref1, ref2, ref3, ref4;
    $scope.messages = [];
    $scope.battery = {
      level: "unknown",
      isPlugged: "unknown"
    };
    $scope.info = {
      isWebView: "unknown",
      isIPad: "unknown",
      isIOS: "unknown",
      isAndroid: "unknown",
      isWindowsPhone: "unknown"
    };
    $scope.refreshHeading = function() {
      return $ionicPlatform.ready(function() {
        return $cordovaDeviceOrientation.getCurrentHeading().then(function(result) {
          return $scope.heading = result;
        })["catch"](function(error) {
          return $scope.error = error;
        });
      });
    };
    $scope.refreshHeading();
    $scope.scanBarcode = function() {
      $log.debug("scanBarcode begin");
      $ionicPlatform.ready(function() {
        var cor, error, error1, ref, ref1, ref2;
        $log.debug("$ionicPlatform.ready begin");
        try {
          cor = cordova;
          $scope.barcode = cor;
          $scope.messages.push("cor=" + (!!cor));
          $scope.messages.push("plugins=" + (!!(cor != null ? cor.plugins : void 0)));
          $scope.messages.push("barcodescanner=" + (!!(cor != null ? (ref = cor.plugins) != null ? ref.barcodescanner : void 0 : void 0)));
          if (cor != null) {
            if ((ref1 = cor.plugins) != null) {
              if ((ref2 = ref1.barcodescanner) != null) {
                if (typeof ref2.scan === "function") {
                  ref2.scan(function(result) {
                    $log.debug("promise then");
                    return $scope.barcode = result;
                  }, function(error) {
                    $log.debug("promise catch");
                    return $scope.error = error;
                  });
                }
              }
            }
          }
          $scope.messages.push("$cordovaBarcodeScanner=" + (!!$cordovaBarcodeScanner));
        } catch (error1) {
          error = error1;
          $scope.messages.push("Error: " + error);
          $scope.error = error;
        }
        return $log.debug("$ionicPlatform.ready end");
      });
      return $log.debug("scanBarcode end");
    };
    io = ionic;
    $scope.messages.push("controller main: " + (!!io));
    $scope.info = {
      isWebView: "controller  main: " + (io != null ? (ref = io.Platform) != null ? ref.isWebView() : void 0 : void 0),
      isIPad: "controller  main: " + (io != null ? (ref1 = io.Platform) != null ? ref1.isIPad() : void 0 : void 0),
      isIOS: "controller  main: " + (io != null ? (ref2 = io.Platform) != null ? ref2.isIOS() : void 0 : void 0),
      isAndroid: "controller  main: " + (io != null ? (ref3 = io.Platform) != null ? ref3.isAndroid() : void 0 : void 0),
      isWindowsPhone: "controller  main: " + (io != null ? (ref4 = io.Platform) != null ? ref4.isWindowsPhone() : void 0 : void 0)
    };
    $ionicPlatform.ready(function() {
      $scope.messages.push("controller main $ionicPlatform.ready fired.");
      io = ionic;
      return $scope.info = {
        isWebView: io.Platform.isWebView(),
        isIPad: io.Platform.isIPad(),
        isIOS: io.Platform.isIOS(),
        isAndroid: io.Platform.isAndroid(),
        isWindowsPhone: io.Platform.isWindowsPhone()
      };
    });
    return $ionicPlatform.ready(function() {
      return $scope.$on("$cordovaBatteryStatus:status", function(result) {
        $scope.battery.level = result.level;
        return $scope.battery.isPlugged = result.isPlugged;
      });
    });
  });

}).call(this);

//# sourceMappingURL=app.js.map
